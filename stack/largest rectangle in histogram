class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int ans=0;
        int n=heights.size();
        vector<int>left(n);
        vector<int>right(n);
        vector<int>area(n);

         stack<pair<int,int>>st;
    for(int i=0;i<n;i++){
         while(st.size()>0 && st.top().first>=heights[i]){
                st.pop();
            }
        if(st.size()==0){ 
            left[i]=-1;
        }
       else {
                left[i]=st.top().second;
            }
        st.push({heights[i],i});
    }


    st={};
    for(int i=n-1;i>=0;i--){
        while(st.size()>0 && st.top().first>=heights[i]){
                st.pop();
            }
        if(st.size()==0){
            right[i]=n;
        }
        else {
                right[i]=st.top().second;
            }
        st.push({heights[i],i});
    }

        for(int i=0;i<n;i++){
            area[i]=heights[i]*(right[i]-left[i]-1);
            ans=max(ans,area[i]);
        }
        return ans;
    }
};
